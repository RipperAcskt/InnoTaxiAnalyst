// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/RipperAcskt/innotaxianalyst/internal/service (interfaces: OrderService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	client "github.com/RipperAcskt/innotaxianalyst/internal/client"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderService is a mock of OrderService interface.
type MockOrderService struct {
	ctrl     *gomock.Controller
	recorder *MockOrderServiceMockRecorder
}

// MockOrderServiceMockRecorder is the mock recorder for MockOrderService.
type MockOrderServiceMockRecorder struct {
	mock *MockOrderService
}

// NewMockOrderService creates a new mock instance.
func NewMockOrderService(ctrl *gomock.Controller) *MockOrderService {
	mock := &MockOrderService{ctrl: ctrl}
	mock.recorder = &MockOrderServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderService) EXPECT() *MockOrderServiceMockRecorder {
	return m.recorder
}

// GetOrdersQuantity mocks base method.
func (m *MockOrderService) GetOrdersQuantity(arg0 context.Context, arg1 client.AnalysType) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrdersQuantity", arg0, arg1)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrdersQuantity indicates an expected call of GetOrdersQuantity.
func (mr *MockOrderServiceMockRecorder) GetOrdersQuantity(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrdersQuantity", reflect.TypeOf((*MockOrderService)(nil).GetOrdersQuantity), arg0, arg1)
}
